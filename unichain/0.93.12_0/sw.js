let scriptsLoadInitiated=!1;const clearAlarms=async()=>{(await chrome.alarms.getAll()).forEach((e=>{/^ALARMS/.test(e.name)&&chrome.alarms.clear(e.name)}))},importAllScripts=()=>{if(!scriptsLoadInitiated)try{importScripts("/webextension-polyfill.js","/vendor/trezor/trezor-connect-webextension.js","/background.js"),scriptsLoadInitiated=!0}catch(e){console.error(e)}},createOffscreen=async()=>{chrome.offscreen&&(await chrome.offscreen.hasDocument()||await chrome.offscreen.createDocument({url:"./offscreen.html",reasons:["IFRAME_SCRIPTING"],justification:"Used for Hardware Wallet to communicate with the extension."}))},keepAlive=()=>{chrome.runtime.onMessage.addListener(((e,t,r)=>(importAllScripts(),!1))),chrome.tabs.onActivated.addListener((()=>(importAllScripts(),!1)))},registerInPageContentScript=async()=>{try{await chrome.scripting.registerContentScripts([{id:"pageProvider",matches:["file://*/*","http://*/*","https://*/*"],js:["pageProvider.js"],runAt:"document_start",world:"MAIN"}])}catch(e){console.warn(`Dropped attempt to register pageProvider content script. ${e}`)}};clearAlarms(),createOffscreen(),chrome.runtime.onMessage.addListener(((e,t,r)=>(importAllScripts(),!1))),chrome.tabs.onActivated.addListener((()=>(importAllScripts(),!1))),self.addEventListener("install",(()=>{importAllScripts()})),navigator?.usb&&navigator.usb.addEventListener("disconnect",(e=>{}));